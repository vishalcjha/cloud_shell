name: Build and Upload Rust Binaries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - platform: macos-latest
            target: x86_64-apple-darwin
          - platform: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: rust-lang/setup-rust@v2
        with:
          rust-version: stable
          target: ${{ matrix.target }}

      - name: Install dependencies
        run: cargo fetch

      - name: Build all binaries
        run: |
          # Replace with the relative paths to your crate directories and their respective binaries
          crates=(
            "crates/klog klog"
          )
          for crate in "${crates[@]}"; do
            IFS=' ' read -r -a parts <<< "$crate"
            crate_dir="${parts[0]}"
            binary_name="${parts[1]}"
            cargo build --release --manifest-path "$crate_dir/Cargo.toml" --target ${{ matrix.target }}
            echo "$crate_dir/target/${{ matrix.target }}/release/$binary_name"
          done

      - name: Upload binaries
        run: |
          # Upload each binary as a separate artifact
          for crate in "${crates[@]}"; do
            IFS=' ' read -r -a parts <<< "$crate"
            crate_dir="${parts[0]}"
            binary_name="${parts[1]}"
            artifact_name="${{ matrix.target }}-$binary_name"
            path="$crate_dir/target/${{ matrix.target }}/release/$binary_name"
            echo "Uploading $artifact_name from $path"
            if [ -f "$path" ]; then
              echo "File exists: $path"
              mkdir -p "artifacts/$crate_dir"
              cp "$path" "artifacts/$crate_dir/"
            else
              echo "File does not exist: $path"
              exit 1
            fi
          done
        shell: bash

      - name: Upload all binaries as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-binaries
          path: artifacts/
